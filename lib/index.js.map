{"version":3,"sources":["../src/index.es6"],"names":["Store","_walk","node","criteria","applied","hasOwnProperty","$value","parent","Array","keys","Object","i","l","length","key","child","_filter","value","undefined","$filter","defaults","$base","filter","criterion","$range","limit","$default","base","isArray","document","load","prototype","err","validate","_tree","get","_get","self","path","invalid","replace","$0","$1","push","meta","$meta","error","reason","e","Error","Date","RegExp","found","match","range","lastLimit","j","default","err2","$id","id","err3","err4"],"mappings":"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","file":"index.js","sourcesContent":["import _cloneDeep from 'lodash/cloneDeep'\nimport _merge from 'lodash/merge'\nimport _concat from 'lodash/concat'\nimport _get from 'lodash/get'\nimport logApplied from './log-applied'\n\n\n// Applies criteria on an entire tree\nfunction _walk(node, criteria, applied) {\n\n    if (!node ||\n        typeof node !== 'object') {\n\n        return node\n    }\n\n    if (node.hasOwnProperty('$value')) {\n        return _walk(node.$value, criteria, applied)\n    }\n\n    const parent = (node instanceof Array ? [] : {})\n\n    const keys = Object.keys(node)\n    for (let i = 0, l = keys.length; i < l; ++i) {\n        const key = keys[i]\n        if (key === '$meta' || key === '$id') {\n            continue\n        }\n        const child = _filter(node[key], criteria, applied)\n        const value = _walk(child, criteria, applied)\n        if (value !== undefined) {\n            parent[key] = value\n        }\n    }\n\n    return parent\n}\n\n// Return node or value if no filter, otherwise apply filters until node or value\nfunction _filter(node, criteria, applied) {\n\n    if (!node ||\n        typeof node !== 'object' ||\n        (!node.$filter && !node.$value)) {\n\n        return node\n    }\n\n    if (node.$value) {\n        return defaults(_filter(node.$value, criteria, applied), node.$base)\n    }\n\n    // Filter\n\n    const filter = node.$filter\n    const criterion = _get(criteria, filter)\n\n    if (criterion !== undefined) {\n        if (node.$range) {\n            for (let i = 0; i < node.$range.length; ++i) {\n                if (criterion <= node.$range[i].limit) {\n                    logApplied(applied, filter, node, node.$range[i])\n                    return _filter(node.$range[i].value, criteria, applied)\n                }\n            }\n        }\n        else if (node[criterion] !== undefined) {\n            logApplied(applied, filter, node, criterion)\n            return defaults(_filter(node[criterion], criteria, applied), node.$base)\n        }\n\n        // Falls-through for $default\n    }\n\n    if (node.hasOwnProperty('$default')) {\n        logApplied(applied, filter, node, '$default')\n        return defaults(_filter(node.$default, criteria, applied), node.$base)\n    }\n\n    logApplied(applied, filter, node)\n    return undefined\n}\n\nfunction defaults(node, base) {\n\n    base = base || {}\n\n    if (typeof node === 'object' && (Array.isArray(base) === Array.isArray(node))) {\n        if (Array.isArray(base) && Array.isArray(node)) {\n          return _concat(_cloneDeep(base), _cloneDeep(node))\n        }\n        return _merge(_cloneDeep(base), _cloneDeep(node))\n    }\n\n    return node\n}\n\n\nexport default function Store(document) {\n\n  this.load(document || {})\n\n}\n\nStore.prototype.load = function(document) {\n\n    const err = Store.validate(document)\n    if (err) throw err\n\n    this._tree = _cloneDeep(document)\n}\n\n\n// Get a filtered value\nStore.prototype.get = function(key, criteria, applied) {\n\n    const node = this._get(key, criteria, applied)\n    return _walk(node, criteria, applied)\n}\n\n\nStore.prototype._get = function (key, criteria, applied) {\n\n    const self = this\n\n    criteria = criteria || {}\n\n    const path = []\n    if (key !== '/') {\n        const invalid = key.replace(/\\/(\\w+)/g, ($0, $1) => {\n\n            path.push($1)\n            return ''\n        })\n\n        if (invalid) {\n            return undefined\n        }\n    }\n\n    let node = _filter(self._tree, criteria, applied)\n    for (let i = 0; i < path.length && node; ++i) {\n        if (typeof node !== 'object') {\n            node = undefined\n            break\n        }\n\n        node = _filter(node[path[i]], criteria, applied)\n    }\n\n    return node\n}\n\n\n// Get a meta for node\nStore.prototype.meta = function (key, criteria) {\n\n    const node = this._get(key, criteria)\n    return (typeof node === 'object' ? node.$meta : undefined)\n}\n\n\n\n// Validate tree structure\nStore.validate = function validate(node, path) {\n\n    path = path || ''\n\n    const error = function (reason) {\n\n        const e = new Error(reason)\n        e.path = path || '/'\n        return e\n    };\n\n    // Valid value\n\n    if (node === null ||\n        node === undefined ||\n        typeof node !== 'object') {\n        return null\n    }\n\n    // Invalid object\n\n    if (node instanceof Error ||\n        node instanceof Date ||\n        node instanceof RegExp) {\n\n        return error('Invalid node object type')\n    }\n\n    // Invalid keys\n\n    const found = {}\n    const keys = Object.keys(node)\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (key[0] === '$') {\n            if (key === '$filter') {\n                found.filter = true\n                const filter = node[key]\n                if (!filter) {\n                    return error('Invalid empty filter value')\n                }\n\n                if (typeof filter !== 'string') {\n                    return error('Filter value must be a string')\n                }\n\n                if (!filter.match(/^\\w+(?:\\.\\w+)*$/)) {\n                    return error('Invalid filter value ' + node[key])\n                }\n            }\n            else if (key === '$range') {\n                found.range = true\n                if (node.$range instanceof Array === false) {\n                    return error('Range value must be an array')\n                }\n\n                if (!node.$range.length) {\n                    return error('Range must include at least one value')\n                }\n\n                let lastLimit = undefined\n                for (let j = 0; j < node.$range.length; ++j) {\n                    const range = node.$range[j]\n                    if (typeof range !== 'object') {\n                        return error('Invalid range entry type')\n                    }\n\n                    if (!range.hasOwnProperty('limit')) {\n                        return error('Range entry missing limit')\n                    }\n\n                    if (typeof range.limit !== 'number') {\n                        return error('Range limit must be a number')\n                    }\n\n                    if (lastLimit !== undefined && range.limit <= lastLimit) {\n                        return error('Range entries not sorted in ascending order - ' + range.limit + ' cannot come after ' + lastLimit)\n                    }\n\n                    lastLimit = range.limit\n\n                    if (!range.hasOwnProperty('value')) {\n                        return error('Range entry missing value')\n                    }\n\n                    const err = Store.validate(range.value, path + '/$range[' + range.limit + ']')\n                    if (err) {\n                        return err\n                    }\n                }\n            }\n            else if (key === '$default') {\n                found.default = true\n                const err2 = Store.validate(node.$default, path + '/$default')\n                if (err2) {\n                    return err2\n                }\n            }\n            else if (key === '$base') {\n                found.base = true\n            }\n            else if (key === '$meta') {\n                found.meta = true\n            }\n            else if (key === '$id') {\n                if (!node.$id ||\n                    typeof node.$id !== 'string') {\n\n                    return error('Id value must be a non-empty string')\n                }\n\n                found.id = true\n            }\n            else if (key === '$value') {\n                found.value = true\n                const err3 = Store.validate(node.$value, path + '/$value')\n                if (err3) {\n                    return err3\n                }\n            }\n            else {\n                return error('Unknown $ directive ' + key)\n            }\n        }\n        else {\n            found.key = true\n            const value = node[key]\n            const err4 = Store.validate(value, path + '/' + key)\n            if (err4) {\n                return err4\n            }\n        }\n    }\n\n    // Invalid directive combination\n    if (found.value && (found.key || found.range || found.default || found.filter)) {\n        return error('Value directive can only be used with meta or nothing')\n    }\n\n    if (found.default && !found.filter) {\n        return error('Default value without a filter')\n    }\n\n    if (found.filter && !found.default && !found.key && !found.range) {\n        return error('Filter without any values')\n    }\n\n    if (found.filter && found.default && !found.key && !found.range) {\n        return error('Filter with only a default')\n    }\n\n    if (found.range && !found.filter) {\n        return error('Range without a filter')\n    }\n\n    if (found.range && found.key) {\n        return error('Range with non-ranged values')\n    }\n\n    // Valid node\n\n    return null\n}\n"]}